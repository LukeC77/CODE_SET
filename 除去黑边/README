架构

- 我们构建了无箱型（unboxed）二维数组：Bit2_T。
- 它们的架构基于 Hanson 的无箱型 UArray。我们声明一个外部数组作为容器来存储指向
  内部数组的指针，这些内部数组存储实际数据。每个条目的索引是一对代表列和行的数字。


Unblackedges 处理

- 对于 unblackedges，我们使用 pnmrdr 从输入中读取并将位存储到 Bit2_T 数组中。
  我们使用广度优先搜索（BFS）在四个边缘中搜索 blackedges，使用队列：
  1. 如果我们找到 blackedges，将其转换为白色。
  2. 然后我们检查它的邻居。如果是黑色，标记并将邻居入队。
  3. 只要队列不为空，我们就继续出队，转换为白色，并检查出队的位的邻居。
     注意，已标记的邻居不会再入队。


文件：
- unblackedges。c: 去黑边程序启动器
- process_black: 实现去黑边功能
- bit2: 实现无相型二维数组
- uarray.h: 无箱型一维数组接口
- pnmrdr.h: 阅读pnm格式的接口 